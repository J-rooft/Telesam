apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    defaultConfig {
        applicationId "space.naboo.telesam"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        buildConfigField "String[]", "apiKey", "{ ${generateKeyXorParts(properties.getProperty('apiKey')).collect {"\"${it}\""}.join(",") } }"
        buildConfigField "String[]", "apiHash", "{ ${generateKeyXorParts(properties.getProperty('apiHash')).collect {"\"${it}\""}.join(",") } }"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:25.4.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}

repositories {
    mavenCentral()
}

static String[] generateKeyXorParts(String key) {
    String[] keyParts = new String[2]

    byte[] xorRandom = new byte[key.length()]
    byte[] xorMatch = new byte[key.length()]
    byte[] keyBytes = key.getBytes()
    for (int i = 0; i < key.length(); i++) {
        xorRandom[i] = (byte) (256 * Math.random())
        xorMatch[i] = (byte) (xorRandom[i] ^ keyBytes[i])
    }
    keyParts[0] = xorRandom.encodeBase64().toString()
    keyParts[1] = xorMatch.encodeBase64().toString()

    return keyParts
}
